package wasm_utils

#private_file io :: package core.io

#private
read_uleb128 :: (use reader: ^io.Reader) -> u64 {
    result: u64 = 0;
    shift := 0;
    byte: u8;

    while true {
        byte = io.read_byte(reader);
        result |= ~~((byte & 127) << ~~shift);
        if (byte & 128) == 0 do break;

        shift += 7;
    }

    return result;
}

#private
read_sleb128 :: (use reader: ^io.Reader, size := 4) -> i64 {
    result: i64 = 0;
    shift := 0;
    byte: u8 = 128;

    while (byte & 128) != 0 {
        byte = io.read_byte(reader);
        result |= ~~((byte & 127) << ~~shift);
        shift += 7;
    }

    if (shift < size) && (byte & 64) > 0 {
        result |= 0xFFFFFFFFFFFFFFFF << ~~shift;
    }

    return result;
}
