package http

urlencode :: (s: str, allocator := context.allocator) -> str {
    out := array.make(u8, s.count, allocator=allocator);

    for ch: s do switch ch {
        //
        // This list was taken from:
        // https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding
        match(#char ":", "%3A");
        match(#char "/", "%2F");
        match(#char "?", "%3F");
        match(#char "#", "%23");
        match(#char "[", "%5B");
        match(#char "]", "%5D");
        match(#char "@", "%40");
        match(#char "!", "%21");
        match(#char "$", "%24");
        match(#char "&", "%26");
        match(#char "'", "%27");
        match(#char "(", "%28");
        match(#char ")", "%29");
        match(#char "*", "%2A");
        match(#char "+", "%2B");
        match(#char ",", "%2C");
        match(#char ";", "%3B");
        match(#char "=", "%3D");
        match(#char "%", "%25");
        match(#char " ", "%20");

        case #default do out << ch;

        match :: macro (from: u8, to: str) {
            //
            // How's this for a one-liner
            case from do for to do out << it;
        }
    }

    return out;
}
