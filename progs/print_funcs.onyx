package printing

print_bool :: proc #foreign "host" "print" (value: bool) ---
print_i32  :: proc #foreign "host" "print" (value: i32) ---
print_f32  :: proc #foreign "host" "print" (value: f32) ---
print_i64  :: proc #foreign "host" "print" (value: i64) ---
print_f64  :: proc #foreign "host" "print" (value: f64) ---

PrintableArray :: struct {
    data: ^u8;
    len: i32;
}

print_i32arr :: proc (arr: [] i32, len: i32) {
    for i: 0, len print(arr[i]);
}

print_i64arr :: proc (arr: [] i64, len: i32) {
    for i: 0, len print(arr[i]);
}

print_f32arr :: proc (arr: [] f32, len: i32) {
    for i: 0, len print(arr[i]);
}

print_f64arr :: proc (arr: [] f64, len: i32) {
    for i: 0, len print(arr[i]);
}

// NOTE: print null-terminated string
print_str :: proc (str: ^u8) {
    c := str;
    while *c != cast(u8) 0 {
        print(cast(i32) (*c));
        c = cast(^u8) (cast(i32) c + 1);
    }
}

print_str_len :: proc (str: [] u8, len: i32) {
    for i: 0, len print(cast(i32) str[i]);
}

print :: proc #overloaded {
    print_bool,
    print_i32,
    print_f32,
    print_i64,
    print_f64,

    print_i32arr,
    print_i64arr,
    print_f32arr,
    print_f64arr,

    print_str,
    print_str_len,
}
