package core.hash

to_u32 :: #match {
    (key: rawptr) -> u32 { return 0xcbf29ce7 ^ cast(u32) key; },
    (key: i8)     -> u32 { return ~~ key; },
    (key: i16)    -> u32 { return 0x9ce7 ^ ~~ key; },
    (key: i32)    -> u32 { return 0xcbf29ce7 ^ cast(u32) key; },
    (key: i64)    -> u32 { return cast(u32) (cast(u64) 0xcbf29ce7 ^ cast(u64) key); },
    (key: str)    -> u32 {
        hash: u32 = 5381;
        for ch: key do hash += (hash << 5) + ~~ch;
        return hash;
    },
    (key: type_expr) -> u32 do return to_u32(cast(u32) key);
}

Hashable :: interface (T as t) {
    { to_u32(t) } -> u32;
}
