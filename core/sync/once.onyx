package core.sync

Once :: struct {
    done: bool;
    mutex: Mutex;
}

#inject Once.exec :: #match #local {}

#overload
Once.exec :: (o: ^Once, f: () -> $R) {
    scoped_mutex(^o.mutex);
    if o.done do return;

    o.done = true;
    f();
}

#overload
Once.exec :: (o: ^Once, ctx: $Ctx, f: (Ctx) -> $R) {
    scoped_mutex(^o.mutex);
    if o.done do return;

    o.done = true;
    f(ctx);
}
