package core.doc

Doc :: struct {
    header: Doc_Header;

    packages:   [] Doc_Package;
    procedures: [] Doc_Procedure;
    files:      [] Doc_File;
}


Doc_Magic_Bytes :: "ODOC"

Doc_Header :: struct {
    magic_bytes: [4] u8;
    version: u32;
    
    program_name: str;
    build_time: u32;

    packages_info_start: u32;
    procedures_info_start: u32;
    files_info_start: u32;
}

Doc_File :: struct {
    Id :: #distinct i32

    package_id: Doc_Package.Id;
    name: str;
}

Doc_Location :: struct {
    file_id: Doc_File.Id;
    line: i32;
    col: i32;
}

Doc_Package :: struct {
    Id :: #distinct i32

    id: Id;
    name: str;             // i.e. 'io'
    qualified_name: str;   // i.e. 'core.io'

    subpackages: [] Id;
}

Doc_Visibility :: enum {
    Public  :: 1;
    Package :: 2;
    Local   :: 3;
}

Doc_Procedure :: struct {
    name: str;

    visibility: Doc_Visibility;
    package_id: Doc_Package.Id;
    location: Doc_Location;

    notes: str;

    Flags :: enum #flags (u32) {
        Is_Macro   :: 1;
        Is_Foreign :: 2;
    }
    flags: Flags;

    params: [] Doc_Procedure_Param;
    return_type: str;   // TODO: Make this not a string
}

Doc_Procedure_Param :: struct {
    name: str;
    type: str;          // TODO: Make this not a string
    default_value: str;
}

