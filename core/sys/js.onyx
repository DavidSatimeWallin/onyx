package system

use package core
use package main as main

output_str :: (s: str) -> u32 #foreign "host" "print_str" ---

assert_handler :: (msg: str, file: str) {
    output_str("Assert failed: ");
    output_str(msg);

    if file.data != null {
        output_str(" in ");
        output_str(file);
    }

    output_str("\n");

    process_exit :: proc (status: i32) #foreign "host" "exit" ---
    process_exit(1);
}

// The builtin _start proc.
// Sets up everything needed for execution.
proc () #export "_start" {
    alloc.init();

    context.allocator = alloc.heap_allocator;
    context.temp_allocator = alloc.temp_allocator;
    context.assert_handler = assert_handler;

    args : [] cstr;
    args.data  = null;
    args.count = 0;

    stdio_init();

    main.main(args);

    print_stream_flush();
}
