package builtin

string  :: #type []u8;
cstring :: #type ^u8;

Buffer :: #type []void;

null :: cast(rawptr) 0;

AllocAction :: enum {
    Alloc;
    Free;
    Resize;
}

allocator_proc :: #type proc (rawptr, AllocAction, u32, u32, rawptr) -> rawptr;

Allocator :: struct {
    data: rawptr;
    func: allocator_proc;
}

alloc :: proc (use a: Allocator, size: u32) -> rawptr {
    return func(data, AllocAction.Alloc, size, 16, null);
}

resize :: proc (use a: Allocator, ptr: rawptr, size: u32) -> rawptr {
    return func(data, AllocAction.Resize, size, 16, ptr);
}

free :: proc (use a: Allocator, ptr: rawptr) {
    func(data, AllocAction.Free, 0, 0, ptr);
}

context : struct {
	allocator      : Allocator;
	temp_allocator : Allocator;	
}