package core.os

#local fs :: package runtime.fs

Directory :: fs.DirectoryData;

DirectoryEntry :: struct {
    // Most of these types were stollen directly from
    // man readdir(3), and the most reasonable types
    // were used for Windows.
    Type :: enum {
        Unknown     :: 0x00;
        Block       :: 0x01;
        Char        :: 0x02;
        Directory   :: 0x03;
        RegularFile :: 0x04;
        SymLink     :: 0x05;
        Other       :: 0x06;
    }

    type        : Type;
    identifier  : u32;
    name_length : u32;
    name_data   : [256] u8;

    name :: (use dir: ^DirectoryEntry) => str.{ ~~name_data, name_length };
}

dir_open :: (path: str) -> (Directory, bool) {
    dir: Directory;
    success := fs.__dir_open(path, ^dir);
    return dir, success;
}

dir_close :: (dir: Directory) {
    fs.__dir_close(dir);
}

dir_read :: (dir: Directory, out_entry: ^DirectoryEntry) -> bool {
    return fs.__dir_read(dir, out_entry);
}

dir_create :: fs.__dir_create
dir_exists :: fs.__file_exists
dir_remove :: fs.__dir_remove
dir_rename :: fs.__file_rename
